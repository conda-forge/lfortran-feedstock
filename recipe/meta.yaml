{% set name = "lfortran" %}
{% set version = "0.11.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://lfortran.github.io/tarballs/release/{{ name }}-{{ version }}.tar.gz
  sha256: 3bb930b24d7ca42a5cd187023a6424021be6485ca43c3e55c005563371391702
  patches:
    - lto.patch

build:
  number: 0
  skip: true  # [py<36]

requirements:
  build:
    - {{ compiler('cxx') }}
    - cmake
    - make   # [unix]
  host:
    - xeus
    - llvmdev =11.1.0
    - xtl
    - nlohmann_json
    - cppzmq
    - zlib
  run:
    # xeus breaks abi compatibility in patch versions even though
    # run_exports say otherwise in https://github.com/conda-forge/xeus-feedstock/blob/0896038be810da2944ebcb612e22886815ea691e/recipe/meta.yaml#L18
    - {{ pin_compatible("xeus", max_pin="x.x.x") }}  # [win]

test:
  requires:
    - jupyter
  commands:
    - test -f ${PREFIX}/bin/lfortran  # [unix]
    - if not exist %LIBRARY_PREFIX%\bin\lfortran.exe exit 1  # [win]
    - lfortran --help
    - lfortran --version
    - jupyter kernelspec list --json
      # This fails if the `fortran` spec is not installed
    - jupyter kernelspec remove -f fortran

about:
  home: https://lfortran.org
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: Modern interactive LLVM-based Fortran compiler
  description: |
    LFortran is a modern open-source (BSD licensed) interactive Fortran
    compiler built on top of LLVM. It can execute user's code interactively to
    allow exploratory work (much like Python, MATLAB or Julia) as well as
    compile to binaries with the goal to run userâ€™s code on modern
    architectures such as multi-core CPUs and GPUs.
  doc_url: https://docs.lfortran.org/
  dev_url: https://gitlab.com/lfortran/lfortran

extra:
  recipe-maintainers:
    - certik
